<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<http auto-config="true">
		<access-denied-handler error-page="/Access_Denied" />
		<intercept-url pattern="/home**"
			access="hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/db**"
			access="hasRole('ROLE_ADMIN') or hasRole('ROLE_DBA')" />

		<form-login login-page="/loginPage" default-target-url="/home"
			authentication-failure-url="/loginPage?error" username-parameter="username"
			password-parameter="password" />
		<logout logout-success-url="/loginPage?logout" />
		<!-- enable csrf protection -->
		<csrf />
	</http>
	<global-method-security secured-annotations="enabled" />

	
	<!-- Select users and user_roles from database -->
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username,password, enabled from ecom_users where username=? and enabled=1"
				authorities-by-username-query="select username, authority from ecom_authorities where username=?" />
		</authentication-provider>
	</authentication-manager>


</beans:beans>